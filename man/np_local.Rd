% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/np_local.R
\name{np_local}
\alias{np_local}
\title{Local implementation of network propagation}
\usage{
np_local(
  graph,
  init_scores,
  int_scores = NULL,
  kernel = c("RWR", "HD"),
  normalize_strategy = c("Row", "Column", "Laplacian"),
  weighted = TRUE,
  param = 0.15,
  niter = 1000,
  delta = 1e-06
)
}
\arguments{
\item{graph}{igraph object}

\item{init_scores}{initial scores, should be with identical order with the vertices}

\item{int_scores}{intermediate scores, only needed if you need to manipulate the scores during the process. This should also be with identical order with the vertices}

\item{kernel}{random walk with restart (RWR) or heat diffusion (HD), only RWR is practical at this point}

\item{normalize_strategy}{strategy of normalization, one of ["Row", "Column", "Laplacian"]}

\item{weighted}{whether it's a weighted graph, default TRUE}

\item{param}{restart probability for RWR and spreading parameter for HD}

\item{niter}{total run of iteration, default 1000, but can be any positive integer}

\item{delta}{threshold of convergence}
}
\value{
a list of two vectors:
        vector: scores after network propagation
        isconverged: whether the network propagation achieves convergence within given iteration
}
\description{
Local implementation of network propagation, including both random walk with restart and heat diffusion. But due to the complexity of calculation, HD is too slow at this point, so only RWR is practical right now
}
